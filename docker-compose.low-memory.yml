services:
  app:
    # 容器名称
    container_name: zhjh-next-app-low-memory
    
    # 使用低内存优化的 Dockerfile
    build:
      context: .
      dockerfile: Dockerfile.low-memory
      args:
        - NODE_ENV=production
    
    # 端口映射：将主机的 80 端口映射到容器的 3000 端口
    ports:
      - "80:3000"
    
    # 重启策略：除非手动停止，否则容器总是在退出时重启
    restart: unless-stopped
    
    # 资源限制（适配2核2G服务器）
    deploy:
      resources:
        limits:
          # 限制容器最大使用1.5G内存，为系统保留0.5G
          memory: 1536M
          # 限制CPU使用，避免过载
          cpus: '1.5'
        reservations:
          # 保证容器至少有1G内存
          memory: 1024M
          cpus: '1.0'
    
    # 环境变量
    environment:
      - NODE_ENV=production
      - NEXT_TELEMETRY_DISABLED=1
      - NODE_OPTIONS=--max-old-space-size=512
    
    # 健康检查
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/api/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    
    # 网络配置
    networks:
      - zhjh_network
    
    # 日志配置（限制日志大小以节省磁盘空间）
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

networks:
  zhjh_network:
    driver: bridge
    driver_opts:
      com.docker.network.driver.mtu: 1500 